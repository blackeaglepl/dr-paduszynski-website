---
/* @ts-nocheck */
// Sekcja: Galeria gabinetu (karuzela + opis lokalizacji)
// Wymagania: 3 stany karuzeli z autoscrollem, przyciski nawigacji, tekst poniżej
import foto1 from "../assets/gallery1.jpg";
import foto2 from "../assets/gallery2.jpg";
import foto3 from "../assets/gallery3.jpg";
import foto4 from "../assets/gallery4.jpg";
import foto5 from "../assets/gallery5.jpg";
import foto6 from "../assets/gallery6.jpg";
import geopin from "../assets/geopin.svg";
import arrow from "../assets/arrow.svg";
import { getLocaleFromUrl, getTranslations, type Locale } from "../utils/i18n";

const currentLocale = getLocaleFromUrl(Astro.url) as Locale;
const t = getTranslations(currentLocale);

// Tłumaczenia dla galerii gabinetu
const translations = {
  pl: {
    heading: { strong: 'Gabinet', light: 'w jakim Cię przyjmę' },
    srOnly: 'Prezentacja zdjęć gabinetu i lokalizacji.',
    navigation: {
      previous: 'Poprzednie zdjęcia',
      next: 'Następne zdjęcia',
      prevAlt: 'Poprzednie',
      nextAlt: 'Następne'
    },
    images: {
      slide1: ['Wnętrze gabinetu – łóżko do terapii', 'Wnętrze gabinetu – jasne wnętrze'],
      slide2: ['Gabinet – detale wyposażenia', 'Gabinet – widok na stół terapeutyczny'],
      slide3: ['Gabinet – jasne, przestronne wnętrze', 'Gabinet – nowoczesne wyposażenie']
    },
    location: {
      city: 'Kraków',
      cityAlt: 'Lokalizacja: Kraków',
      address: 'ul. Jugowicka 35/5',
      description: 'Mój gabinet mieści się w Krakowie przy ul. Jugowickiej 35/5. Bliskość Zakopianki oraz obwodnicy zapewnia wygodny dojazd z niemal każdej części Krakowa, a także z pobliskich miejscowości, takich jak Myślenice, Libertów, Mogilany czy Skawina. Jeśli szukasz gabinetu osteopatii w południowej części Krakowa – właśnie go znalazłeś.'
    }
  },
  en: {
    heading: { strong: 'Clinic', light: 'where I will see you' },
    srOnly: 'Presentation of clinic and location photos.',
    navigation: {
      previous: 'Previous photos',
      next: 'Next photos', 
      prevAlt: 'Previous',
      nextAlt: 'Next'
    },
    images: {
      slide1: ['Clinic interior – therapy bed', 'Clinic interior – bright interior'],
      slide2: ['Clinic – equipment details', 'Clinic – view of therapeutic table'],
      slide3: ['Clinic – bright, spacious interior', 'Clinic – modern equipment']
    },
    location: {
      city: 'Kraków',
      cityAlt: 'Location: Kraków',
      address: 'ul. Jugowicka 35/5',
      description: 'My clinic is located in Kraków at ul. Jugowicka 35/5. The proximity to Zakopianka and the ring road ensures convenient access from almost any part of Kraków, as well as from nearby towns such as Myślenice, Libertów, Mogilany or Skawina. If you are looking for an osteopathy clinic in the southern part of Kraków – you have just found it.'
    }
  }
} as const;

const content = translations[currentLocale];
---

<!-- Nagłówek sekcji: owinięty w kontener dla pewnego wyśrodkowania -->
<div class="container mx-auto px-4 md:px-6 max-w-6xl">
  <h2
    class="text-center font-heading transition-colors duration-150 hover:text-medical-primary text-h2-mobile md:text-h2-desktop text-medical-text tracking-tight py-16 md:pt-2 pb-16"
    data-animate="fade-up"
    data-animate-delay="100"
  >
    <strong class="font-semibold">{content.heading.strong}</strong>
    <span class="font-light">{content.heading.light}</span>
  </h2>
  <p class="sr-only">{content.srOnly}</p>
  <!-- koniec nagłówka -->
</div>

<!-- Kontener sekcji (ogranicza szerokość karuzeli i opisu) -->
<div class="container mx-auto px-4 md:px-6 max-w-6xl">
  <!-- Karuzela zdjęć -->
  <div
    id="clinic-carousel"
    class="relative mt-6 md:mt-10 select-none"
    aria-roledescription="carousel"
    tabindex="0"
    data-animate="fade-up"
    data-animate-delay="100"
  >
    <!-- Przyciski nawigacji -->
    <button
      type="button"
      aria-label={content.navigation.previous}
      data-action="prev"
      class="hidden md:flex items-center justify-center absolute -left-10 lg:-left-14 top-1/2 -translate-y-1/2 h-10 w-10 rounded-full bg-white/80 text-medical-text shadow-sm ring-1 ring-medical-bg hover:bg-white focus:outline-none focus:ring-2 focus:ring-medical-primary/50"
    >
      <img
        src={arrow.src}
        alt={content.navigation.prevAlt}
        aria-hidden="true"
        class="h-5 w-5 md:h-6 md:w-6 rotate-180"
      />
    </button>
    <button
      type="button"
      aria-label={content.navigation.next}
      data-action="next"
      class="hidden md:flex items-center justify-center absolute -right-10 lg:-right-14 top-1/2 -translate-y-1/2 h-10 w-10 rounded-full bg-white/80 text-medical-text shadow-sm ring-1 ring-medical-bg hover:bg-white focus:outline-none focus:ring-2 focus:ring-medical-primary/50"
    >
      <img
        src={arrow.src}
        alt={content.navigation.nextAlt}
        aria-hidden="true"
        class="h-5 w-5 md:h-6 md:w-6"
      />
    </button>

    <!-- Okno widoku -->
    <div class="overflow-hidden rounded-3xl md:rounded-4xl">
      <!-- Tor slajdów -->
      <div
        class="flex transition-transform duration-500 ease-out will-change-transform"
        data-carousel-track
      >
        <!-- Slajd 1 -->
        <div class="w-full shrink-0">
          <div class="grid md:grid-cols-2 gap-6 md:gap-8 items-stretch">
            <img
              src={foto1.src}
              alt={content.images.slide1[0]}
              loading="lazy"
              class="w-full h-full object-cover rounded-3xl md:rounded-4xl shadow-sm"
            />
            <img
              src={foto2.src}
              alt={content.images.slide1[1]}
              loading="lazy"
              class="w-full h-full object-cover rounded-3xl md:rounded-4xl shadow-sm"
            />
          </div>
        </div>
        <!-- Slajd 2 -->
        <div class="w-full shrink-0">
          <div class="grid md:grid-cols-2 gap-6 md:gap-8 items-stretch">
            <img
              src={foto3.src}
              alt={content.images.slide2[0]}
              loading="lazy"
              class="w-full h-full object-cover rounded-3xl md:rounded-4xl shadow-sm"
            />
            <img
              src={foto4.src}
              alt={content.images.slide2[1]}
              loading="lazy"
              class="w-full h-full object-cover rounded-3xl md:rounded-4xl shadow-sm"
            />
          </div>
        </div>
        <!-- Slajd 3 -->
        <div class="w-full shrink-0">
          <div class="grid md:grid-cols-2 gap-6 md:gap-8 items-stretch">
            <img
              src={foto5.src}
              alt={content.images.slide3[0]}
              loading="lazy"
              class="w-full h-full object-cover rounded-3xl md:rounded-4xl shadow-sm"
            />
            <img
              src={foto6.src}
              alt={content.images.slide3[1]}
              loading="lazy"
              class="w-full h-full object-cover rounded-3xl md:rounded-4xl shadow-sm"
            />
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Sekcja opisu lokalizacji -->
  <div
    class="mt-16 md:mt-20 grid md:grid-cols-3 gap-8 md:gap-12 items-start"
    data-animate="fade-up"
    data-animate-delay="150"
  >
    <div class="md:col-span-1">
      <div class="flex items-center gap-3 justify-center md:justify-start">
        <img src={geopin.src} alt={content.location.cityAlt} class="h-6 w-6" />
        <span class="font-heading text-medical-text text-base md:text-lg"
          >{content.location.city}</span
        >
      </div>
      <div
        class="mt-3 font-heading text-medical-text text-h3-mobile md:text-h2-desktop tracking-tight text-center md:text-left"
      >
        {content.location.address}
      </div>
    </div>
    <div class="md:col-span-2">
      <p class="text-medical-text-light text-body-mobile md:text-body-desktop">
        {content.location.description}
      </p>
    </div>
  </div>
</div>

<!-- Skrypt karuzeli: auto-scroll, przyciski, pauza po najechaniu, obsługa swipe -->
<script>
  const carouselRoot = document.getElementById(
    "clinic-carousel",
  ) as HTMLElement | null;
  if (carouselRoot) {
    const track = carouselRoot.querySelector<HTMLElement>(
      "[data-carousel-track]",
    );
    const prevBtn = carouselRoot.querySelector<HTMLButtonElement>(
      '[data-action="prev"]',
    );
    const nextBtn = carouselRoot.querySelector<HTMLButtonElement>(
      '[data-action="next"]',
    );
    const totalSlides: number = track?.children?.length ?? 0;

    let currentIndex = 0;
    const prefersReducedMotion = window.matchMedia(
      "(prefers-reduced-motion: reduce)",
    ).matches;
    let autoScrollId: number = 0;

    // Zmienne dla obsługi swipe
    let startX = 0;
    let startY = 0;
    let endX = 0;
    let isDragging = false;
    let startTime = 0;
    let swipeDirection: 'horizontal' | 'vertical' | null = null;

    const update = (instant: boolean = false) => {
      if (!track) return;
      track.style.transitionDuration =
        instant || prefersReducedMotion ? "0ms" : "500ms";
      track.style.transform = `translateX(-${currentIndex * 100}%)`;
    };

    const goTo = (nextIndex: number) => {
      currentIndex = (nextIndex + totalSlides) % totalSlides;
      update();
    };

    const start = () => {
      if (prefersReducedMotion) return;
      stop();
      autoScrollId = window.setInterval(
        () => goTo(currentIndex + 1),
        5000,
      ) as unknown as number;
    };

    const stop = () => {
      if (autoScrollId) {
        window.clearInterval(autoScrollId);
        autoScrollId = 0;
      }
    };

    // Obsługa swipe/touch
    const handleTouchStart = (e: TouchEvent) => {
      startX = e.touches[0].clientX;
      startY = e.touches[0].clientY;
      startTime = Date.now();
      isDragging = true;
      swipeDirection = null;
      stop(); // Zatrzymaj auto-scroll podczas interakcji
    };

    const handleTouchMove = (e: TouchEvent) => {
      if (!isDragging) return;

      const currentX = e.touches[0].clientX;
      const currentY = e.touches[0].clientY;

      if (swipeDirection === null) {
        const deltaX = Math.abs(currentX - startX);
        const deltaY = Math.abs(currentY - startY);
        // Ustaw kierunek tylko jeśli ruch jest wystarczająco duży
        if (deltaX > 5 || deltaY > 5) {
            if (deltaX > deltaY) {
                swipeDirection = 'horizontal';
            } else {
                swipeDirection = 'vertical';
            }
        }
      }

      if (swipeDirection === 'horizontal') {
        endX = e.touches[0].clientX;
        // Zapobiegnij scroll strony podczas swipe karuzeli
        e.preventDefault();
      }
    };

    const handleTouchEnd = () => {
      if (!isDragging) return;
      isDragging = false;
      
      if (swipeDirection === 'horizontal') {
        const deltaX = startX - endX;
        const deltaTime = Date.now() - startTime;
        const minSwipeDistance = 50;
        const maxSwipeTime = 500;

        // Sprawdź czy gest spełnia warunki swipe
        if (Math.abs(deltaX) > minSwipeDistance && deltaTime < maxSwipeTime) {
          if (deltaX > 0) {
            // Swipe w lewo - następny slajd
            goTo(currentIndex + 1);
          } else {
            // Swipe w prawo - poprzedni slajd
            goTo(currentIndex - 1);
          }
        }
      }
      
      // Wznów auto-scroll po krótkiej przerwie
      setTimeout(start, 1000);
    };

    // Zdarzenia touch dla urządzeń mobilnych
    if (track) {
      track.addEventListener("touchstart", handleTouchStart, { passive: false });
      track.addEventListener("touchmove", handleTouchMove, { passive: false });
      track.addEventListener("touchend", handleTouchEnd);
    }

    // Zdarzenia przycisków
    prevBtn?.addEventListener("click", () => goTo(currentIndex - 1));
    nextBtn?.addEventListener("click", () => goTo(currentIndex + 1));

    // Zatrzymaj auto-scroll podczas hover (desktop)
    carouselRoot.addEventListener("mouseenter", stop);
    carouselRoot.addEventListener("mouseleave", start);

    // Dostępność: strzałki z klawiatury przy focusie na sekcji
    carouselRoot.addEventListener("keydown", (e: KeyboardEvent) => {
      if (e.key === "ArrowLeft") goTo(currentIndex - 1);
      if (e.key === "ArrowRight") goTo(currentIndex + 1);
    });

    // Inicjalizacja
    update(true);
    start();
  }
</script>
