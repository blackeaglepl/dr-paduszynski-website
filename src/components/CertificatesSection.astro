---
/* @ts-nocheck */
// Sekcja: Certyfikaty i referencje (karuzela A4)
// Reużywa logiki z ClinicGallerySection: strzałki, auto-scroll, klawiatura
import diploma1 from '../assets/dyplom1.png';
import arrow from '../assets/arrow.svg';
---

<section id="certyfikaty" class="py-16 md:pt-2 pb-16">
  <div class="container mx-auto px-4 md:px-6 max-w-6xl">
    <!-- Nagłówek sekcji -->
    <h2
      class="font-heading transition-colors duration-150 hover:text-medical-primary text-h2-mobile md:text-h2-desktop text-medical-text tracking-tight text-center mb-2 md:mb-3"
      data-animate="fade-up"
      data-animate-delay="100"
    >
      <strong class="font-semibold">Certyfikaty</strong> i referencje
    </h2>

    <!-- Karuzela dyplomów (format A4) -->
    <div
      id="certificates-carousel"
      class="relative mt-2 md:mt-3 pt-3 md:pt-4sselect-none"
      aria-roledescription="carousel"
      tabindex="0"
      data-animate="fade-up"
      data-animate-delay="100"
    >
      <!-- Przyciski nawigacji -->
      <button
        type="button"
        aria-label="Poprzednie certyfikaty"
        data-action="prev"
        class="hidden md:flex items-center justify-center absolute -left-10 lg:-left-14 top-1/2 -translate-y-1/2 h-10 w-10 rounded-full bg-white/80 text-medical-text shadow-sm ring-1 ring-medical-bg hover:bg-white focus:outline-none focus:ring-2 focus:ring-medical-primary/50"
      >
        <img src={arrow.src} alt="Poprzednie" aria-hidden="true" class="h-5 w-5 md:h-6 md:w-6 rotate-180" />
      </button>
      <button
        type="button"
        aria-label="Następne certyfikaty"
        data-action="next"
        class="hidden md:flex items-center justify-center absolute -right-10 lg:-right-14 top-1/2 -translate-y-1/2 h-10 w-10 rounded-full bg-white/80 text-medical-text shadow-sm ring-1 ring-medical-bg hover:bg-white focus:outline-none focus:ring-2 focus:ring-medical-primary/50"
      >
        <img src={arrow.src} alt="Następne" aria-hidden="true" class="h-5 w-5 md:h-6 md:w-6" />
      </button>

      <!-- Okno widoku: ukryj tylko nadmiar w osi X, zostaw miejsce na cień w Y + wewnętrzne paddingi -->
      <div class="overflow-x-hidden overflow-y-visible px-0 pt-6 md:pt-8 pb-12 md:pb-16">
        <!-- Tor slajdów -->
        <div class="flex transition-transform duration-500 ease-out will-change-transform" data-carousel-track>
          <!-- Slajd 1: 3 dyplomy -->
          <div class="w-full shrink-0 flex-none">
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 md:gap-12 items-start justify-items-center px-6 sm:px-8 md:px-14">
              {Array.from({ length: 3 }).map((_, idx) => (
                <figure tabindex="0" class={`group w-full max-w-[260px] sm:max-w-[300px] md:max-w-[340px] ${idx > 0 ? 'hidden md:block' : ''} mx-auto my-4 md:my-6`}>
                  <!-- Kontener A4: proporcje 210x297 => 141.4% wysokości -->
                  <div class="relative w-full pt-[141.4%] bg-white rounded-[30px] shadow-[12px_12px_35px_rgba(0,0,0,0.15)] ring-1 ring-medical-bg transform-gpu transition-all duration-[400ms] ease-[cubic-bezier(0.4,0,0.2,1)] will-change-transform md:group-hover:scale-[1.125] md:group-focus:scale-[1.05] md:group-focus-within:scale-[1.125] md:group-hover:z-10">
                    <div class="absolute inset-0 m-auto h-[90%] w-[88%] bg-white rounded-[26px] pt-8 px-3 pb-3 sm:pt-8 sm:px-4 sm:pb-4">
                      <img
                        src={diploma1.src}
                        alt={`Dyplom/Certyfikat nr ${idx + 1}`}
                        loading="lazy"
                        class="h-full w-full object-contain rounded-[16px]"
                      />
                    </div>
                  </div>
                </figure>
              ))}
            </div>
          </div>

          <!-- Slajd 2 -->
          <div class="w-full shrink-0 flex-none">
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 md:gap-12 items-start justify-items-center px-6 sm:px-8 md:px-14">
              {Array.from({ length: 3 }).map((_, idx) => (
                <figure tabindex="0" class={`group w-full max-w-[260px] sm:max-w-[300px] md:max-w-[340px] ${idx > 0 ? 'hidden md:block' : ''} mx-auto my-4 md:my-6`}>
                  <div class="relative w-full pt-[141.4%] bg-white rounded-[30px] shadow-[12px_12px_35px_rgba(0,0,0,0.15)] ring-1 ring-medical-bg transform-gpu transition-all duration-[400ms] ease-[cubic-bezier(0.4,0,0.2,1)] will-change-transform md:group-hover:scale-[1.125] md:group-focus:scale-[1.05] md:group-focus-within:scale-[1.125] md:group-hover:z-10">
                    <div class="absolute inset-0 m-auto h-[90%] w-[88%] bg-white rounded-[26px] pt-8 px-3 pb-3 sm:pt-8 sm:px-4 sm:pb-4">
                      <img
                        src={diploma1.src}
                        alt={`Certyfikat szkolenia nr ${idx + 4}`}
                        loading="lazy"
                        class="h-full w-full object-contain rounded-[16px]"
                      />
                    </div>
                  </div>
                </figure>
              ))}
            </div>
          </div>

          <!-- Slajd 3 -->
          <div class="w-full shrink-0 flex-none">
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 md:gap-12 items-start justify-items-center px-6 sm:px-8 md:px-14">
              {Array.from({ length: 3 }).map((_, idx) => (
                <figure tabindex="0" class={`group w-full max-w-[260px] sm:max-w-[300px] md:max-w-[340px] ${idx > 0 ? 'hidden md:block' : ''} mx-auto my-4 md:my-6`}>
                  <div class="relative w-full pt-[141.4%] bg-white rounded-[30px] shadow-[12px_12px_35px_rgba(0,0,0,0.15)] ring-1 ring-medical-bg transform-gpu transition-all duration-[400ms] ease-[cubic-bezier(0.4,0,0.2,1)] will-change-transform md:group-hover:scale-[1.125] md:group-focus:scale-[1.05] md:group-focus-within:scale-[1.125] md:group-hover:z-10">
                    <div class="absolute inset-0 m-auto h-[90%] w-[88%] bg-white rounded-[26px] pt-8 px-3 pb-3 sm:pt-8 sm:px-4 sm:pb-4">
                      <img
                        src={diploma1.src}
                        alt={`Certyfikat umiejętności nr ${idx + 7}`}
                        loading="lazy"
                        class="h-full w-full object-contain rounded-[16px]"
                      />
                    </div>
                  </div>
                </figure>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Krótka notka uwiarygadniająca -->
    <p class="mt-4 pb-8 text-center text-medical-text-light text-small-mobile md:text-small-desktop" data-animate="fade-up" data-animate-delay="150">
      Powyżej znajdują się wybrane szkolenia i certyfikaty. Oryginały dostępne do wglądu w moim gabinecie.
    </p>
  </div>

  <!-- Skrypt karuzeli: auto-scroll, przyciski, pauza po najechaniu -->
  <script>
    const carouselRoot = document.getElementById('certificates-carousel') as HTMLElement | null;
    if (carouselRoot) {
      const track = carouselRoot.querySelector<HTMLElement>('[data-carousel-track]');
      const prevBtn = carouselRoot.querySelector<HTMLButtonElement>('[data-action="prev"]');
      const nextBtn = carouselRoot.querySelector<HTMLButtonElement>('[data-action="next"]');
      const totalSlides: number = track?.children?.length ?? 0;

      let currentIndex = 0;
      const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
      let autoScrollId: number = 0;

      const update = (instant: boolean = false) => {
        if (!track) return;
        track.style.transitionDuration = instant || prefersReducedMotion ? '0ms' : '500ms';
        // Dodatkowy padding kompensowany w widoku – przesuwamy pełne szerokości slajdów
        track.style.transform = `translateX(-${currentIndex * 100}%)`;
      };

      const goTo = (nextIndex: number) => {
        currentIndex = (nextIndex + totalSlides) % totalSlides;
        update();
      };

      const start = () => {
        if (prefersReducedMotion) return;
        stop();
        autoScrollId = window.setInterval(() => goTo(currentIndex + 1), 6000) as unknown as number;
      };

      const stop = () => {
        if (autoScrollId) {
          window.clearInterval(autoScrollId);
          autoScrollId = 0;
        }
      };

      // Zdarzenia: klik
      prevBtn?.addEventListener('click', () => goTo(currentIndex - 1));
      nextBtn?.addEventListener('click', () => goTo(currentIndex + 1));

      carouselRoot.addEventListener('mouseenter', stop);
      carouselRoot.addEventListener('mouseleave', start);

      // Dostępność: strzałki z klawiatury przy focusie na sekcji
      carouselRoot.addEventListener('keydown', (e: KeyboardEvent) => {
        if (e.key === 'ArrowLeft') goTo(currentIndex - 1);
        if (e.key === 'ArrowRight') goTo(currentIndex + 1);
      });

      // Gesty dotykowe (swipe)
      let startX = 0;
      let isSwiping = false;
      const onTouchStart = (e: TouchEvent) => {
        if (!e.touches || e.touches.length === 0) return;
        startX = e.touches[0].clientX;
        isSwiping = true;
        stop();
      };
      const onTouchMove = (e: TouchEvent) => {
        if (!isSwiping || !track) return;
        const deltaX = e.touches[0].clientX - startX;
        // delikatne przesunięcie pod palcem bez podcinania cienia
        track.style.transitionDuration = '0ms';
        track.style.transform = `translateX(calc(-${currentIndex * 100}% + ${deltaX}px))`;
      };
      const onTouchEnd = (e: TouchEvent) => {
        if (!isSwiping) return;
        const endX = (e.changedTouches && e.changedTouches[0]?.clientX) || startX;
        const delta = endX - startX;
        const threshold = 40; // czułość gestu
        if (delta > threshold) {
          goTo(currentIndex - 1);
        } else if (delta < -threshold) {
          goTo(currentIndex + 1);
        } else {
          update();
        }
        isSwiping = false;
        start();
      };

      carouselRoot.addEventListener('touchstart', onTouchStart, { passive: true });
      carouselRoot.addEventListener('touchmove', onTouchMove, { passive: true });
      carouselRoot.addEventListener('touchend', onTouchEnd);

      // Inicjalizacja
      update(true);
      start();
    }
  </script>
</section>


